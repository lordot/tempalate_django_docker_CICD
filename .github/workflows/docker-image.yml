name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build_and_push:

    runs-on: ubuntu-latest

    steps:
    - name: Check out the repo
    - uses: actions/checkout@v3
    
  
    - name: Set up Docker Buildx
    - uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
    - uses: docker/login-action@v2
    - with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
    - uses: docker/build-push-action@v4
    - with:
        context: project/Dockerfile
        push: true
        tags: lordot/test_cicd:latest

          
#   deploy:
#     name: Deploy project
#     runs-on: ubuntu-latest
#     needs: build_and_push_to_docker_hub
#     steps:
#       - name: executing remote ssh commands to deploy
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.SSH_KEY }}
#           passphrase: ${{ secrets.PASSPHRASE }}
#           script: |
#             sudo docker-compose stop
#             sudo docker-compose rm web
#             touch .env
#             echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
#             echo DB_NAME=${{ secrets.DB_NAME }} >> .env
#             echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
#             echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
#             echo DB_HOST=${{ secrets.DB_HOST }} >> .env
#             echo DB_PORT=${{ secrets.DB_PORT }} >> .env
#             sudo docker-compose up -d

#   send_message:
#      name: Send message via telegram
#      runs-on: ubuntu-latest
#      needs: deploy
#      steps:
#        - name: send message
#          uses: appleboy/telegram-action@master
#          with:
#            to: ${{ secrets.TELEGRAM_TO }}
#            token: ${{ secrets.TELEGRAM_TOKEN }}
#            message: ${{ github.workflow }} успешно выполнен!
